-- MySQL Script generated by MySQL Workbench
-- Fri Apr 17 21:02:05 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema invoice
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema invoice
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `invoice` DEFAULT CHARACTER SET utf8 ;
USE `invoice` ;

-- -----------------------------------------------------
-- Table `invoice`.`Customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`Customer` ;

CREATE TABLE IF NOT EXISTS `invoice`.`Customer` (
  `idCustomer` INT NOT NULL AUTO_INCREMENT,
  `CustomerName` VARCHAR(45) NULL,
  `PhoneNumber` INT NULL,
  `Email` VARCHAR(45) NULL,
  `Country` VARCHAR(45) NULL,
  `City` VARCHAR(45) NULL,
  `Address` VARCHAR(45) NULL,
  `Balance` FLOAT NULL,
  PRIMARY KEY (`idCustomer`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `invoice`.`Product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`Product` ;

CREATE TABLE IF NOT EXISTS `invoice`.`Product` (
  `idProduct` INT NOT NULL AUTO_INCREMENT,
  `ProductName` VARCHAR(45) NOT NULL,
  `Description` VARCHAR(45) NULL,
  `Stock` INT NOT NULL,
  `MinStock` INT NOT NULL,
  `Cost` FLOAT NULL,
  `SellPrice` FLOAT NULL,
  `VAT` FLOAT NULL,
  `Category` VARCHAR(45) NULL,
  PRIMARY KEY (`idProduct`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `invoice`.`Invoice`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`Invoice` ;

CREATE TABLE IF NOT EXISTS `invoice`.`Invoice` (
  `idInvoice` INT NOT NULL AUTO_INCREMENT,
  `idCustomer` INT NOT NULL,
  `Cost` FLOAT NULL,
  `VAT` FLOAT NULL,
  `TotalCost` FLOAT NULL,
  `CreatedDate` DATETIME NULL,
  `DueDate` DATE NULL,
  `PreviousBalance` FLOAT NULL,
  `IssuedBy` VARCHAR(45) NULL,
  PRIMARY KEY (`idInvoice`),
  INDEX `fk_Invoice_Customer_idx` (`idCustomer` ASC),
  CONSTRAINT `fk_Invoice_Customer`
    FOREIGN KEY (`idCustomer`)
    REFERENCES `invoice`.`Customer` (`idCustomer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `invoice`.`InvoiceProduct`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`InvoiceProduct` ;

CREATE TABLE IF NOT EXISTS `invoice`.`InvoiceProduct` (
  `idInvoice` INT NOT NULL,
  `idProduct` INT NOT NULL,
  `Quantity` INT NOT NULL,
  `Cost` FLOAT NULL,
  `VAT` FLOAT NULL,
  INDEX `fk_Invoice_has_Product_Product1_idx` (`idProduct` ASC),
  INDEX `fk_Invoice_has_Product_Invoice1_idx` (`idInvoice` ASC),
  PRIMARY KEY (`idProduct`, `idInvoice`),
  CONSTRAINT `fk_Invoice_has_Product_Invoice1`
    FOREIGN KEY (`idInvoice`)
    REFERENCES `invoice`.`Invoice` (`idInvoice`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Invoice_has_Product_Product1`
    FOREIGN KEY (`idProduct`)
    REFERENCES `invoice`.`Product` (`idProduct`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `invoice`.`CreditNote`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`CreditNote` ;

CREATE TABLE IF NOT EXISTS `invoice`.`CreditNote` (
  `idCreditNote` INT NOT NULL AUTO_INCREMENT,
  `idCustomer` INT NOT NULL,
  `Cost` FLOAT NULL,
  `VAT` FLOAT NULL,
  `TotalCost` FLOAT NULL,
  `CreatedDate` DATETIME NULL,
  `PreviousBalance` FLOAT NULL,
  `IssuedBy` VARCHAR(45) NULL,
  PRIMARY KEY (`idCreditNote`),
  INDEX `fk_CreditNote_Customer1_idx` (`idCustomer` ASC),
  CONSTRAINT `fk_CreditNote_Customer1`
    FOREIGN KEY (`idCustomer`)
    REFERENCES `invoice`.`Customer` (`idCustomer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `invoice`.`Order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`Order` ;

CREATE TABLE IF NOT EXISTS `invoice`.`Order` (
  `idOrder` INT NOT NULL AUTO_INCREMENT,
  `idCustomer` INT NOT NULL,
  `IssuedDate` DATETIME NULL,
  `ShippingDate` DATETIME NULL,
  `Cost` FLOAT NULL,
  `VAT` FLOAT NULL,
  `TotalCost` FLOAT NULL,
  `IssuedBy` VARCHAR(45) NULL,
  `Status` ENUM("Ready", "Pending", "Completed") NULL DEFAULT 'Pending',
  PRIMARY KEY (`idOrder`),
  INDEX `fk_Order_Customer1_idx` (`idCustomer` ASC),
  CONSTRAINT `fk_Order_Customer1`
    FOREIGN KEY (`idCustomer`)
    REFERENCES `invoice`.`Customer` (`idCustomer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `invoice`.`Receipt`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`Receipt` ;

CREATE TABLE IF NOT EXISTS `invoice`.`Receipt` (
  `idReceipt` INT NOT NULL AUTO_INCREMENT,
  `idCustomer` INT NOT NULL,
  `Amount` FLOAT NULL,
  `CreatedDate` DATETIME NULL,
  `PreviousBalance` FLOAT NULL,
  `IssuedBy` VARCHAR(45) NULL,
  PRIMARY KEY (`idReceipt`),
  INDEX `fk_Receipt_Customer1_idx` (`idCustomer` ASC),
  CONSTRAINT `fk_Receipt_Customer1`
    FOREIGN KEY (`idCustomer`)
    REFERENCES `invoice`.`Customer` (`idCustomer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `invoice`.`OrderProduct`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`OrderProduct` ;

CREATE TABLE IF NOT EXISTS `invoice`.`OrderProduct` (
  `idOrder` INT NOT NULL,
  `idProduct` INT NOT NULL,
  `Quantity` INT NULL,
  `Cost` FLOAT NULL,
  `VAT` FLOAT NULL,
  PRIMARY KEY (`idOrder`, `idProduct`),
  INDEX `fk_Order_has_Product_Product1_idx` (`idProduct` ASC),
  INDEX `fk_Order_has_Product_Order1_idx` (`idOrder` ASC),
  CONSTRAINT `fk_Order_has_Product_Order1`
    FOREIGN KEY (`idOrder`)
    REFERENCES `invoice`.`Order` (`idOrder`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Order_has_Product_Product1`
    FOREIGN KEY (`idProduct`)
    REFERENCES `invoice`.`Product` (`idProduct`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `invoice`.`CreditNoteProduct`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`CreditNoteProduct` ;

CREATE TABLE IF NOT EXISTS `invoice`.`CreditNoteProduct` (
  `idCreditNote` INT NOT NULL,
  `idProduct` INT NOT NULL,
  `idInvoice` INT NOT NULL,
  `Quantity` INT NULL,
  PRIMARY KEY (`idCreditNote`, `idProduct`, `idInvoice`),
  INDEX `fk_table1_InvoiceProduct1_idx` (`idProduct` ASC, `idInvoice` ASC),
  CONSTRAINT `fk_table1_CreditNote1`
    FOREIGN KEY (`idCreditNote`)
    REFERENCES `invoice`.`CreditNote` (`idCreditNote`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_table1_InvoiceProduct1`
    FOREIGN KEY (`idProduct` , `idInvoice`)
    REFERENCES `invoice`.`InvoiceProduct` (`idProduct` , `idInvoice`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `invoice`.`Quote`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`Quote` ;

CREATE TABLE IF NOT EXISTS `invoice`.`Quote` (
  `idQuote` INT NOT NULL AUTO_INCREMENT,
  `idCustomer` INT NOT NULL,
  `CreatedDate` DATETIME NULL,
  `IssuedBy` VARCHAR(45) NULL,
  PRIMARY KEY (`idQuote`),
  INDEX `fk_Quote_Customer1_idx` (`idCustomer` ASC),
  CONSTRAINT `fk_Quote_Customer1`
    FOREIGN KEY (`idCustomer`)
    REFERENCES `invoice`.`Customer` (`idCustomer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `invoice`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`User` ;

CREATE TABLE IF NOT EXISTS `invoice`.`User` (
  `idUser` VARCHAR(20) NOT NULL,
  `Hash` VARCHAR(500) NOT NULL,
  `Salt` VARCHAR(250) NOT NULL,
  `AdminPrivileges` TINYINT(1) NULL,
  PRIMARY KEY (`idUser`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `invoice`.`Payment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`Payment` ;

CREATE TABLE IF NOT EXISTS `invoice`.`Payment` (
  `idPayment` INT NOT NULL AUTO_INCREMENT,
  `idReceipt` INT NOT NULL,
  `PaymentMethod` ENUM("Cash", "Bank", "Cheque") NULL,
  `Amount` FLOAT NULL,
  `PaymentNumber` VARCHAR(100) NULL,
  `PaymentDate` DATETIME NULL,
  PRIMARY KEY (`idPayment`),
  INDEX `fk_Payment_Receipt1_idx` (`idReceipt` ASC),
  CONSTRAINT `fk_Payment_Receipt1`
    FOREIGN KEY (`idReceipt`)
    REFERENCES `invoice`.`Receipt` (`idReceipt`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `invoice`.`QuoteProduct`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`QuoteProduct` ;

CREATE TABLE IF NOT EXISTS `invoice`.`QuoteProduct` (
  `idQuote` INT NOT NULL,
  `idProduct` INT NOT NULL,
  `Price` FLOAT NULL,
  PRIMARY KEY (`idQuote`, `idProduct`),
  INDEX `fk_QuoteProduct_Product1_idx` (`idProduct` ASC),
  CONSTRAINT `fk_QuoteProduct_Quote1`
    FOREIGN KEY (`idQuote`)
    REFERENCES `invoice`.`Quote` (`idQuote`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_QuoteProduct_Product1`
    FOREIGN KEY (`idProduct`)
    REFERENCES `invoice`.`Product` (`idProduct`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `invoice`.`Expense`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`Expense` ;

CREATE TABLE IF NOT EXISTS `invoice`.`Expense` (
  `idExpense` INT NOT NULL AUTO_INCREMENT,
  `CompanyName` VARCHAR(100) NULL,
  `Category` VARCHAR(45) NULL,
  `PhoneNumber` INT NULL,
  `Description` VARCHAR(500) NULL,
  `InvoiceNo` INT NULL,
  `CreatedDate` DATETIME NULL,
  `Cost` FLOAT NULL,
  `VAT` FLOAT NULL,
  `TotalCost` FLOAT NULL,
  `IsPaid` TINYINT(1) NULL,
  `IssuedBy` VARCHAR(45) NULL,
  PRIMARY KEY (`idExpense`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `invoice`.`ExpensePayment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`ExpensePayment` ;

CREATE TABLE IF NOT EXISTS `invoice`.`ExpensePayment` (
  `idPayment` INT NOT NULL,
  `idExpense` INT NOT NULL,
  `PaymentMethod` ENUM("Cash", "Bank", "Cheque") NULL,
  `Amount` FLOAT NULL,
  `PaymentNumber` VARCHAR(100) NULL,
  `PaymentDate` DATETIME NULL,
  `ExpensePaymentcol` VARCHAR(45) NULL,
  PRIMARY KEY (`idPayment`),
  INDEX `fk_ExpensePayment_Expense1_idx` (`idExpense` ASC),
  CONSTRAINT `fk_ExpensePayment_Expense1`
    FOREIGN KEY (`idExpense`)
    REFERENCES `invoice`.`Expense` (`idExpense`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `invoice` ;

-- -----------------------------------------------------
-- Placeholder table for view `invoice`.`viewInvoice`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `invoice`.`viewInvoice` (`InvoiceID` INT, `InvoiceCost` INT, `InvoiceVAT` INT, `InvoiceTotalCost` INT, `CreatedDate` INT, `DueDate` INT, `IssuedBy` INT, `idCustomer` INT, `CustomerName` INT, `PhoneNumber` INT, `Email` INT, `Country` INT, `City` INT, `Address` INT, `Balance` INT, `ProductName` INT, `Description` INT, `Stock` INT, `idProduct` INT, `Quantity` INT, `IPCost` INT, `IPVAT` INT);

-- -----------------------------------------------------
-- Placeholder table for view `invoice`.`viewOrder`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `invoice`.`viewOrder` (`OrderID` INT, `OrderCost` INT, `OrderVAT` INT, `OrderTotalCost` INT, `IssuedDate` INT, `ShippingDate` INT, `IssuedBy` INT, `Status` INT, `idCustomer` INT, `CustomerName` INT, `PhoneNumber` INT, `Email` INT, `Country` INT, `City` INT, `Address` INT, `Balance` INT, `ProductName` INT, `Description` INT, `Stock` INT, `idProduct` INT, `Quantity` INT, `OPCost` INT, `OPVAT` INT);

-- -----------------------------------------------------
-- Placeholder table for view `invoice`.`viewReceipt`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `invoice`.`viewReceipt` (`ReceiptID` INT, `TotalAmount` INT, `CreatedDate` INT, `IssuedBy` INT, `idCustomer` INT, `CustomerName` INT, `PhoneNumber` INT, `Email` INT, `Country` INT, `City` INT, `Address` INT, `Balance` INT, `idPayment` INT, `idReceipt` INT, `PaymentMethod` INT, `Amount` INT, `PaymentNumber` INT, `PaymentDate` INT);

-- -----------------------------------------------------
-- Placeholder table for view `invoice`.`viewCreditNote`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `invoice`.`viewCreditNote` (`CreditNoteID` INT, `CreditNoteCost` INT, `CreditNoteVAT` INT, `CreditNoteTotalCost` INT, `CreatedDate` INT, `IssuedBy` INT, `idCustomer` INT, `CustomerName` INT, `PhoneNumber` INT, `Email` INT, `Country` INT, `City` INT, `Address` INT, `Balance` INT, `ProductName` INT, `Description` INT, `Stock` INT, `idProduct` INT, `Quantity` INT, `idInvoice` INT, `IPCost` INT, `IPVAT` INT);

-- -----------------------------------------------------
-- Placeholder table for view `invoice`.`viewQuote`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `invoice`.`viewQuote` (`QuoteID` INT, `CreatedDate` INT, `IssuedBy` INT, `idCustomer` INT, `CustomerName` INT, `PhoneNumber` INT, `Email` INT, `Country` INT, `City` INT, `Address` INT, `Balance` INT, `OfferPrice` INT, `idProduct` INT, `ProductName` INT, `Description` INT, `Stock` INT, `MinStock` INT, `Cost` INT, `SellPrice` INT, `VAT` INT, `Category` INT);

-- -----------------------------------------------------
-- View `invoice`.`viewInvoice`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`viewInvoice`;
DROP VIEW IF EXISTS `invoice`.`viewInvoice` ;
USE `invoice`;
CREATE  OR REPLACE VIEW `viewInvoice` AS SELECT 
i.idInvoice AS InvoiceID,
i.Cost AS InvoiceCost,
i.VAT AS InvoiceVAT,
i.TotalCost AS InvoiceTotalCost,
i.CreatedDate,
i.DueDate,
i.IssuedBy,
c.*,
p.ProductName,
p.Description,
p.Stock,
ip.idProduct,
ip.Quantity,
ip.Cost AS IPCost,
ip.VAT AS IPVAT
FROM Invoice AS i
INNER JOIN Customer AS c ON i.idCustomer = c.idCustomer 
INNER JOIN InvoiceProduct AS ip ON i.idInvoice = ip.idInvoice 
INNER JOIN Product AS p ON ip.idProduct = p.idProduct
order by InvoiceID;

-- -----------------------------------------------------
-- View `invoice`.`viewOrder`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`viewOrder`;
DROP VIEW IF EXISTS `invoice`.`viewOrder` ;
USE `invoice`;
CREATE  OR REPLACE VIEW `viewOrder` AS SELECT 
o.idOrder AS OrderID,
o.Cost AS OrderCost,
o.VAT AS OrderVAT,
o.TotalCost AS OrderTotalCost,
o.IssuedDate,
o.ShippingDate,
o.IssuedBy,
o.Status,
c.*,
p.ProductName,
p.Description,
p.Stock,
op.idProduct,
op.Quantity,
op.Cost AS OPCost,
op.VAT AS OPVAT
FROM `Order` AS o
INNER JOIN Customer AS c ON o.idCustomer = c.idCustomer 
INNER JOIN OrderProduct AS op ON o.idOrder = op.idOrder 
INNER JOIN Product AS p ON op.idProduct = p.idProduct
order by OrderID;

-- -----------------------------------------------------
-- View `invoice`.`viewReceipt`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`viewReceipt`;
DROP VIEW IF EXISTS `invoice`.`viewReceipt` ;
USE `invoice`;
CREATE  OR REPLACE VIEW `viewReceipt` AS SELECT 
r.idReceipt AS ReceiptID,
r.Amount AS TotalAmount,
r.CreatedDate,
r.IssuedBy,
c.*,
p.*
FROM Receipt AS r
INNER JOIN Customer AS c ON r.idCustomer = c.idCustomer 
INNER JOIN Payment AS p ON p.idReceipt = r.idReceipt
order by ReceiptID;

-- -----------------------------------------------------
-- View `invoice`.`viewCreditNote`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`viewCreditNote`;
DROP VIEW IF EXISTS `invoice`.`viewCreditNote` ;
USE `invoice`;
CREATE  OR REPLACE VIEW `viewCreditNote` AS SELECT
cn.idCreditNote AS CreditNoteID,
cn.Cost AS CreditNoteCost,
cn.VAT AS CreditNoteVAT,
cn.TotalCost AS CreditNoteTotalCost,
cn.CreatedDate,
cn.IssuedBy,
c.*,
p.ProductName,
p.Description,
p.Stock,
ip.idProduct,
cnp.Quantity,
cnp.idInvoice,
ip.Cost AS IPCost,
ip.VAT AS IPVAT
FROM CreditNote AS cn
INNER JOIN Customer AS c ON cn.idCustomer = c.idCustomer 
INNER JOIN CreditNoteProduct AS cnp ON cn.idCreditNote = cnp.idCreditNote 
INNER JOIN InvoiceProduct AS ip ON ip.idInvoice = cnp.idInvoice AND ip.idProduct = cnp.idProduct
INNER JOIN Product AS p ON cnp.idProduct = p.idProduct
order by CreditNoteID;

-- -----------------------------------------------------
-- View `invoice`.`viewQuote`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `invoice`.`viewQuote`;
DROP VIEW IF EXISTS `invoice`.`viewQuote` ;
USE `invoice`;
CREATE  OR REPLACE VIEW `viewQuote` AS SELECT
q.idQuote AS QuoteID,
q.CreatedDate,
q.IssuedBy,
c.*,
qp.Price AS OfferPrice,
p.*
FROM Quote AS q
INNER JOIN Customer AS c ON q.idCustomer = c.idCustomer 
INNER JOIN QuoteProduct AS qp ON q.idQuote = qp.idQuote 
INNER JOIN Product AS p ON qp.idProduct = p.idProduct
order by QuoteID;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
